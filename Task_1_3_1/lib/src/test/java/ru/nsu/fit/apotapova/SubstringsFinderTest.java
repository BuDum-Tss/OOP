/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ru.nsu.fit.apotapova;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

class SubstringsFinderTest {

  @Test
  void testBigText() {
    try (BufferedReader reader = new BufferedReader(
        new FileReader("src/test/resources/BigText.txt"))) {
      SubstringsFinder finder = new SubstringsFinder(32);
      Assertions.assertEquals(10, finder.findSubstring(reader, "The Boy Who Lived"));
    } catch (IOException e) {
      throw new RuntimeException(e);
    }

  }

  @Test
  void testBigText2() {
    try (BufferedReader reader = new BufferedReader(
        new FileReader("src/test/resources/BigText.txt"))) {
      SubstringsFinder finder = new SubstringsFinder(32);
      Assertions.assertNull(finder.findSubstring(reader, "This line is not in the text"));
    } catch (IOException e) {
      throw new RuntimeException(e);
    }
  }

  @Test
  void testBufferOverlap() {
    try (BufferedReader reader = new BufferedReader(
        new FileReader("src/test/resources/BufferOverlap.txt"))) {
      SubstringsFinder finder = new SubstringsFinder(32);
      Assertions.assertEquals(26, finder.findSubstring(reader, "---->.<----"));
    } catch (IOException e) {
      throw new RuntimeException(e);
    }

  }

  @Test
  void testUTF8() {
    try (BufferedReader reader = new BufferedReader(
        new InputStreamReader(new FileInputStream("src/test/resources/UTF8.txt"),
            StandardCharsets.UTF_8))) {
      SubstringsFinder finder = new SubstringsFinder(32);
      Assertions.assertEquals(1, finder.findSubstring(reader, "Â©"));
    } catch (IOException e) {
      throw new RuntimeException(e);
    }
  }

  @Test
  void testSameChars() {
    try (BufferedReader reader = new BufferedReader(
        new FileReader("src/test/resources/SameChars.txt"))) {
      SubstringsFinder finder = new SubstringsFinder(32);
      Assertions.assertEquals(0, finder.findSubstring(reader, "AAA"));
    } catch (IOException e) {
      throw new RuntimeException(e);
    }
  }
}
